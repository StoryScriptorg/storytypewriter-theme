{"mappings":"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","sources":["src/index.ts","src/utils.ts","src/defaultThemes/dark.ts","src/defaultThemes/light.ts"],"sourcesContent":["import type { Theme } from \"./utils\";\nimport { createCodeMirrorTheme } from \"./utils\";\nimport { darkHighlightStyle, darkStoryTypewriter, darkStoryTypewriterCodeMirrorTheme } from './defaultThemes/dark';\nimport { lightStoryTypewriter, lightStoryTypewriterCodeMirrorTheme, lightHighlightStyle } from \"./defaultThemes/light\";\n\nconst darkTheme = {\n    theme: darkStoryTypewriter,\n    codeMirrorTheme: darkStoryTypewriterCodeMirrorTheme,\n    highlightStyle: darkHighlightStyle\n};\n\nconst lightTheme = {\n    theme: lightStoryTypewriter,\n    codeMirrorTheme: lightStoryTypewriterCodeMirrorTheme,\n    highlightStyle: lightHighlightStyle\n};\n\nexport {\n    createCodeMirrorTheme,\n    darkTheme,\n    lightTheme,\n    Theme\n};","import { Extension } from \"@codemirror/state\";\nimport { EditorView } from \"@codemirror/view\";\n\nexport interface Theme {\n    background: string;\n    darkerBackground: string;\n    evenDarkerBackground: string;\n    textColor: string;\n    linkColor: string;\n}\n\n/**\n * This function creartes a new CodeMirror theme from the existing StoryTypewriter Theme object.\n * @param theme The theme object itself.\n * @param dark Indicates if this is a dark theme or not.\n * @returns The CodeMirror theme extension.\n */\nexport function createCodeMirrorTheme(theme: Theme, dark: boolean): Extension {\n    return EditorView.theme({\n        \"&\": {\n            color: theme.textColor,\n            backgroundColor: theme.background\n        },\n        \"&.cm-focused .cm-selectionBackground, ::selection\": {\n            backgroundColor: theme.darkerBackground\n        },\n        \".cm-content\": {\n            caretColor: theme.textColor\n        },\n        \"&.cm-focused .cm-cursor\": {\n            borderLeftColor: theme.textColor\n        },\n        \".cm-gutters\": {\n            backgroundColor: theme.evenDarkerBackground,\n            color: theme.textColor,\n            border: \"none\"\n        },\n        \".cm-activeLine\": {\n            backgroundColor: theme.darkerBackground\n        }\n    }, { dark });\n}","import { HighlightStyle, tags } from \"@codemirror/highlight\";\nimport { Extension } from \"@codemirror/state\";\nimport { createCodeMirrorTheme, Theme } from \"../utils\";\n\nexport const darkStoryTypewriter: Theme = {\n    background: \"#2c2f33\",\n    darkerBackground: \"#23272a\",\n    evenDarkerBackground: \"#1a1d20\",\n    textColor: \"white\",\n    linkColor: \"cornflowerblue\"\n};\n\nexport const darkStoryTypewriterCodeMirrorTheme: Extension = createCodeMirrorTheme(darkStoryTypewriter, true);\n\n/**\n * The default highlight style for the default StoryTypewriter dark theme.\n * It just lives here so that it can be reused in their theme if people wanted.\n */\nexport const darkHighlightStyle: Extension = HighlightStyle.define([\n    { tag: tags.link, color: \"cornflowerblue\" },\n    { tag: tags.heading, textDecoration: \"underline\", fontWeight: \"bold\" },\n    { tag: tags.keyword, color: \"#1f75fe\" /* Crayola Blue */ },\n    { tag: tags.tagName, color: \"#1f75fe\" /* Crayola Blue */ },\n    { tag: tags.angleBracket, color: \"#c0c0c0\" /* Silver */ },\n    { tag: tags.attributeName, color: \"#318ce7\" /* Blue De France */ },\n    { tag: tags.attributeValue, color: \"#f5f5dc\" /* Beige */ },\n    { tag: tags.string, color: \"#f5f5dc\" /* Beige */ },\n    { tag: tags.escape, color: \"#c4ae78\" /* A different shade of Beige */ }\n]);","import { defaultHighlightStyle } from \"@codemirror/highlight\";\nimport { Extension } from \"@codemirror/state\";\nimport { createCodeMirrorTheme, Theme } from \"../utils\";\n\nexport const lightStoryTypewriter: Theme = {\n    background: \"white\",\n    darkerBackground: \"whitesmoke\",\n    evenDarkerBackground: \"#ccc\",\n    textColor: \"black\",\n    linkColor: \"darkblue\"\n};\n\nexport const lightStoryTypewriterCodeMirrorTheme: Extension = createCodeMirrorTheme(lightStoryTypewriter, false);\n\nexport const lightHighlightStyle: Extension = defaultHighlightStyle;\n"],"names":[],"version":3,"file":"storytypewriter_theme.js.map"}